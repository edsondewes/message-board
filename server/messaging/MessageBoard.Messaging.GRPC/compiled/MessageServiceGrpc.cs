// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messageService.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MessageBoard.Messaging.GRPC {
  public static partial class MessageService
  {
    static readonly string __ServiceName = "MessageBoard.Messaging.GRPC.MessageService";

    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.CreateRequest> __Marshaller_CreateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.CreateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.MessageResponse> __Marshaller_MessageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.MessageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.LoadRequest> __Marshaller_LoadRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.LoadRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.LoadBatchRequest> __Marshaller_LoadBatchRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.LoadBatchRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.ListResponse> __Marshaller_ListResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.ListResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MessageBoard.Messaging.GRPC.PaginateRequest> __Marshaller_PaginateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MessageBoard.Messaging.GRPC.PaginateRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::MessageBoard.Messaging.GRPC.CreateRequest, global::MessageBoard.Messaging.GRPC.MessageResponse> __Method_Create = new grpc::Method<global::MessageBoard.Messaging.GRPC.CreateRequest, global::MessageBoard.Messaging.GRPC.MessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_CreateRequest,
        __Marshaller_MessageResponse);

    static readonly grpc::Method<global::MessageBoard.Messaging.GRPC.LoadRequest, global::MessageBoard.Messaging.GRPC.MessageResponse> __Method_Load = new grpc::Method<global::MessageBoard.Messaging.GRPC.LoadRequest, global::MessageBoard.Messaging.GRPC.MessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Load",
        __Marshaller_LoadRequest,
        __Marshaller_MessageResponse);

    static readonly grpc::Method<global::MessageBoard.Messaging.GRPC.LoadBatchRequest, global::MessageBoard.Messaging.GRPC.ListResponse> __Method_LoadBatch = new grpc::Method<global::MessageBoard.Messaging.GRPC.LoadBatchRequest, global::MessageBoard.Messaging.GRPC.ListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoadBatch",
        __Marshaller_LoadBatchRequest,
        __Marshaller_ListResponse);

    static readonly grpc::Method<global::MessageBoard.Messaging.GRPC.PaginateRequest, global::MessageBoard.Messaging.GRPC.ListResponse> __Method_Paginate = new grpc::Method<global::MessageBoard.Messaging.GRPC.PaginateRequest, global::MessageBoard.Messaging.GRPC.ListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Paginate",
        __Marshaller_PaginateRequest,
        __Marshaller_ListResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MessageBoard.Messaging.GRPC.MessageServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MessageService</summary>
    public abstract partial class MessageServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::MessageBoard.Messaging.GRPC.MessageResponse> Create(global::MessageBoard.Messaging.GRPC.CreateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MessageBoard.Messaging.GRPC.MessageResponse> Load(global::MessageBoard.Messaging.GRPC.LoadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MessageBoard.Messaging.GRPC.ListResponse> LoadBatch(global::MessageBoard.Messaging.GRPC.LoadBatchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MessageBoard.Messaging.GRPC.ListResponse> Paginate(global::MessageBoard.Messaging.GRPC.PaginateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MessageService</summary>
    public partial class MessageServiceClient : grpc::ClientBase<MessageServiceClient>
    {
      /// <summary>Creates a new client for MessageService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MessageServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MessageService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MessageServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MessageServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MessageServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::MessageBoard.Messaging.GRPC.MessageResponse Create(global::MessageBoard.Messaging.GRPC.CreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MessageBoard.Messaging.GRPC.MessageResponse Create(global::MessageBoard.Messaging.GRPC.CreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.MessageResponse> CreateAsync(global::MessageBoard.Messaging.GRPC.CreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.MessageResponse> CreateAsync(global::MessageBoard.Messaging.GRPC.CreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::MessageBoard.Messaging.GRPC.MessageResponse Load(global::MessageBoard.Messaging.GRPC.LoadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Load(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MessageBoard.Messaging.GRPC.MessageResponse Load(global::MessageBoard.Messaging.GRPC.LoadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Load, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.MessageResponse> LoadAsync(global::MessageBoard.Messaging.GRPC.LoadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.MessageResponse> LoadAsync(global::MessageBoard.Messaging.GRPC.LoadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Load, null, options, request);
      }
      public virtual global::MessageBoard.Messaging.GRPC.ListResponse LoadBatch(global::MessageBoard.Messaging.GRPC.LoadBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadBatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MessageBoard.Messaging.GRPC.ListResponse LoadBatch(global::MessageBoard.Messaging.GRPC.LoadBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoadBatch, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.ListResponse> LoadBatchAsync(global::MessageBoard.Messaging.GRPC.LoadBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadBatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.ListResponse> LoadBatchAsync(global::MessageBoard.Messaging.GRPC.LoadBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoadBatch, null, options, request);
      }
      public virtual global::MessageBoard.Messaging.GRPC.ListResponse Paginate(global::MessageBoard.Messaging.GRPC.PaginateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Paginate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MessageBoard.Messaging.GRPC.ListResponse Paginate(global::MessageBoard.Messaging.GRPC.PaginateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Paginate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.ListResponse> PaginateAsync(global::MessageBoard.Messaging.GRPC.PaginateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PaginateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MessageBoard.Messaging.GRPC.ListResponse> PaginateAsync(global::MessageBoard.Messaging.GRPC.PaginateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Paginate, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MessageServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MessageServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MessageServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Load, serviceImpl.Load)
          .AddMethod(__Method_LoadBatch, serviceImpl.LoadBatch)
          .AddMethod(__Method_Paginate, serviceImpl.Paginate).Build();
    }

  }
}
#endregion
