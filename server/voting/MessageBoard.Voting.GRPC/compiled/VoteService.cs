// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: voteService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MessageBoard.Voting.GRPC {

  /// <summary>Holder for reflection information generated from voteService.proto</summary>
  public static partial class VoteServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for voteService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VoteServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF2b3RlU2VydmljZS5wcm90bxIYTWVzc2FnZUJvYXJkLlZvdGluZy5HUlBD",
            "IjEKDFZvdGVSZXNwb25zZRISCgpvcHRpb25OYW1lGAEgASgJEg0KBWNvdW50",
            "GAIgASgNIjMKCkFkZFJlcXVlc3QSEQoJc3ViamVjdElkGAEgASgJEhIKCm9w",
            "dGlvbk5hbWUYAiABKAkiIgoNU2luZ2xlUmVxdWVzdBIRCglzdWJqZWN0SWQY",
            "ASABKAkywwEKC1ZvdGVTZXJ2aWNlElUKA0FkZBIkLk1lc3NhZ2VCb2FyZC5W",
            "b3RpbmcuR1JQQy5BZGRSZXF1ZXN0GiYuTWVzc2FnZUJvYXJkLlZvdGluZy5H",
            "UlBDLlZvdGVSZXNwb25zZSIAEl0KBlNpbmdsZRInLk1lc3NhZ2VCb2FyZC5W",
            "b3RpbmcuR1JQQy5TaW5nbGVSZXF1ZXN0GiYuTWVzc2FnZUJvYXJkLlZvdGlu",
            "Zy5HUlBDLlZvdGVSZXNwb25zZSIAMAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MessageBoard.Voting.GRPC.VoteResponse), global::MessageBoard.Voting.GRPC.VoteResponse.Parser, new[]{ "OptionName", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MessageBoard.Voting.GRPC.AddRequest), global::MessageBoard.Voting.GRPC.AddRequest.Parser, new[]{ "SubjectId", "OptionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MessageBoard.Voting.GRPC.SingleRequest), global::MessageBoard.Voting.GRPC.SingleRequest.Parser, new[]{ "SubjectId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VoteResponse : pb::IMessage<VoteResponse> {
    private static readonly pb::MessageParser<VoteResponse> _parser = new pb::MessageParser<VoteResponse>(() => new VoteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MessageBoard.Voting.GRPC.VoteServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteResponse(VoteResponse other) : this() {
      optionName_ = other.optionName_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteResponse Clone() {
      return new VoteResponse(this);
    }

    /// <summary>Field number for the "optionName" field.</summary>
    public const int OptionNameFieldNumber = 1;
    private string optionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptionName {
      get { return optionName_; }
      set {
        optionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptionName != other.OptionName) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OptionName.Length != 0) hash ^= OptionName.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OptionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OptionName);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OptionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionName);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteResponse other) {
      if (other == null) {
        return;
      }
      if (other.OptionName.Length != 0) {
        OptionName = other.OptionName;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OptionName = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddRequest : pb::IMessage<AddRequest> {
    private static readonly pb::MessageParser<AddRequest> _parser = new pb::MessageParser<AddRequest>(() => new AddRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MessageBoard.Voting.GRPC.VoteServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddRequest(AddRequest other) : this() {
      subjectId_ = other.subjectId_;
      optionName_ = other.optionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddRequest Clone() {
      return new AddRequest(this);
    }

    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 1;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "optionName" field.</summary>
    public const int OptionNameFieldNumber = 2;
    private string optionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptionName {
      get { return optionName_; }
      set {
        optionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectId != other.SubjectId) return false;
      if (OptionName != other.OptionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (OptionName.Length != 0) hash ^= OptionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubjectId);
      }
      if (OptionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OptionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (OptionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      if (other.OptionName.Length != 0) {
        OptionName = other.OptionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubjectId = input.ReadString();
            break;
          }
          case 18: {
            OptionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleRequest : pb::IMessage<SingleRequest> {
    private static readonly pb::MessageParser<SingleRequest> _parser = new pb::MessageParser<SingleRequest>(() => new SingleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MessageBoard.Voting.GRPC.VoteServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleRequest(SingleRequest other) : this() {
      subjectId_ = other.subjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleRequest Clone() {
      return new SingleRequest(this);
    }

    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 1;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectId != other.SubjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
